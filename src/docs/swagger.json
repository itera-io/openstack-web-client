{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/health/": {
            "get": {
                "description": "Health Check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/auth": {
            "post": {
                "description": "Authenticate User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Authenticate User",
                "parameters": [
                    {
                        "description": "AuthenticateUserRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.AuthenticateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/validate": {
            "post": {
                "description": "Validate User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Validate User",
                "parameters": [
                    {
                        "description": "ValidateUserRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ValidateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/apiversions": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List ApiVersion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ApiVersions"
                ],
                "summary": "List ApiVersion",
                "parameters": [
                    {
                        "description": "ListApiVersion Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListApiVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListApiVersion response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListApiVersionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/availabilityzones": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List AvailabilityZone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AvailabilityZones"
                ],
                "summary": "List AvailabilityZone",
                "parameters": [
                    {
                        "description": "ListAvailabilityZone Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListAvailabilityZoneRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListAvailabilityZone response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListAvailabilityZoneResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/compute/limits": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Compute Limits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ComputeLimits"
                ],
                "summary": "Get Compute Limits",
                "responses": {
                    "200": {
                        "description": "GetComputeLimits response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.GetComputeLimitResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/flavors": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List Flavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flavors"
                ],
                "summary": "List Flavor",
                "parameters": [
                    {
                        "description": "ListFlavor Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListFlavorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListFlavor response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListFlavorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/flavors/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Flavor by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flavors"
                ],
                "summary": "Get Flavor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetFlavor response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.GetFlavorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/images": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List Image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "List Image",
                "parameters": [
                    {
                        "description": "ListImage Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListImage response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListImageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/images/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Image by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Images"
                ],
                "summary": "Get Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetImage response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.GetImageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v2/networking/quotas": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Network Quotas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NetworkQuotas"
                ],
                "summary": "Get Network Quotas",
                "parameters": [
                    {
                        "description": "GetNetworkQuota Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.GetNetworkQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetNetworkQuota response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.GetNetworkQuotaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v3/Projects": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "List Project",
                "parameters": [
                    {
                        "description": "ListProjectRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListProject response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListProjectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v3/regions": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List Region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "List Region",
                "parameters": [
                    {
                        "description": "ListRegionRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListRegionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListRegion response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListRegionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v3/users/{id}/projects": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List UserProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserProjects"
                ],
                "summary": "List UserProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListUserProject response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListUserProjectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        },
        "/v3/volumetypes": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "List VolumeType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeTypes"
                ],
                "summary": "List VolumeType",
                "parameters": [
                    {
                        "description": "ListVolumeType Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListVolumeTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ListVolumeType response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ListVolumeTypeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "schema": {
                            "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiversions.APIVersion": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the unique identifier of the API version.",
                    "type": "string"
                },
                "min_version": {
                    "description": "MinVersion is the minimum microversion supported.",
                    "type": "string"
                },
                "status": {
                    "description": "Status is the API versions status.",
                    "type": "string"
                },
                "updated": {
                    "description": "Updated is the date when the API was last updated.",
                    "type": "string"
                },
                "version": {
                    "description": "Version is the maximum microversion supported.",
                    "type": "string"
                }
            }
        },
        "availabilityzones.AvailabilityZone": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The availability zone ID.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the availability zone.",
                    "type": "string"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.AuthenticateUserRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "applicationCredentialID": {
                    "description": "Authentication through Application Credentials requires supplying name, project and secret\nFor project we can use TenantID",
                    "type": "string"
                },
                "applicationCredentialName": {
                    "type": "string"
                },
                "applicationCredentialSecret": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.CommonDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.FlavorDto": {
            "type": "object",
            "properties": {
                "disk": {
                    "description": "Disk is the amount of root disk, measured in GB.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID is the flavor's unique ID.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the flavor.",
                    "type": "string"
                },
                "os-flavor-access:is_public": {
                    "description": "IsPublic indicates whether the flavor is public.",
                    "type": "boolean"
                },
                "ram": {
                    "description": "RAM is the amount of memory, measured in MB.",
                    "type": "integer"
                },
                "vcpus": {
                    "description": "VCPUs indicates how many (virtual) CPUs are available for this flavor.",
                    "type": "integer"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.GetComputeLimitResponse": {
            "type": "object",
            "properties": {
                "limits": {
                    "$ref": "#/definitions/limits.Limits"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.GetFlavorResponse": {
            "type": "object",
            "properties": {
                "flavor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.FlavorDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.GetImageResponse": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ImageDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.GetNetworkQuotaRequest": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "string"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.GetNetworkQuotaResponse": {
            "type": "object",
            "properties": {
                "quota": {
                    "$ref": "#/definitions/quotas.Quota"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ImageDto": {
            "type": "object",
            "properties": {
                "disk": {
                    "description": "Disk is the amount of root disk, measured in GB.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID is the flavor's unique ID.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the flavor.",
                    "type": "string"
                },
                "ram": {
                    "description": "RAM is the amount of memory, measured in MB.",
                    "type": "integer"
                },
                "status": {
                    "description": "VCPUs indicates how many (virtual) CPUs are available for this flavor.",
                    "type": "string"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ImageListItem": {
            "type": "object",
            "properties": {
                "disk": {
                    "description": "Disk is the amount of root disk, measured in GB.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID is the flavor's unique ID.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the flavor.",
                    "type": "string"
                },
                "ram": {
                    "description": "RAM is the amount of memory, measured in MB.",
                    "type": "integer"
                },
                "tag": {
                    "description": "Tags filters on specific image tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListApiVersionRequest": {
            "type": "object"
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListApiVersionResponse": {
            "type": "object",
            "properties": {
                "apiversions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiversions.APIVersion"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListAvailabilityZoneRequest": {
            "type": "object"
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListAvailabilityZoneResponse": {
            "type": "object",
            "properties": {
                "availabilityzones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/availabilityzones.AvailabilityZone"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListFlavorRequest": {
            "type": "object",
            "properties": {
                "minDisk": {
                    "type": "integer"
                },
                "minRam": {
                    "type": "integer"
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListFlavorResponse": {
            "type": "object",
            "properties": {
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.FlavorDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListImageRequest": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner filters on the project ID of the image.",
                    "type": "string"
                },
                "status": {
                    "description": "Status filters on the status of the image.\nMultiple statuses can be specified by constructing a string\nsuch as \"in:saving,queued,active\".",
                    "type": "string"
                },
                "tag": {
                    "description": "Tags filters on specific image tags.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListImageResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.ImageListItem"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListProjectRequest": {
            "type": "object"
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListProjectResponse": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.CommonDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListRegionRequest": {
            "type": "object"
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListRegionResponse": {
            "type": "object",
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.CommonDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListUserProjectResponse": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_dto.CommonDto"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListVolumeTypeRequest": {
            "type": "object"
        },
        "github_com_itera-io_openstack-web-client_api_dto.ListVolumeTypeResponse": {
            "type": "object",
            "properties": {
                "volumetypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/volumetypes.VolumeType"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_dto.ValidateUserRequest": {
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_helper.BaseHttpResponse": {
            "type": "object",
            "properties": {
                "error": {},
                "result": {},
                "resultCode": {
                    "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_helper.ResultCode"
                },
                "success": {
                    "type": "boolean"
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_itera-io_openstack-web-client_api_validations.ValidationError"
                    }
                }
            }
        },
        "github_com_itera-io_openstack-web-client_api_helper.ResultCode": {
            "type": "integer",
            "enum": [
                0,
                40001,
                40101,
                40301,
                40401,
                42901,
                42902,
                50001,
                50002
            ],
            "x-enum-varnames": [
                "Success",
                "ValidationError",
                "AuthError",
                "ForbiddenError",
                "NotFoundError",
                "LimiterError",
                "OtpLimiterError",
                "CustomRecovery",
                "InternalError"
            ]
        },
        "github_com_itera-io_openstack-web-client_api_validations.ValidationError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "limits.Absolute": {
            "type": "object",
            "properties": {
                "maxImageMeta": {
                    "description": "MaxImageMeta is the amount of image metadata available to a tenant.",
                    "type": "integer"
                },
                "maxPersonality": {
                    "description": "MaxPersonality is the amount of personality/files available to a tenant.",
                    "type": "integer"
                },
                "maxPersonalitySize": {
                    "description": "MaxPersonalitySize is the personality file size available to a tenant.",
                    "type": "integer"
                },
                "maxSecurityGroupRules": {
                    "description": "MaxSecurityGroupRules is the number of security group rules available to\na tenant.",
                    "type": "integer"
                },
                "maxSecurityGroups": {
                    "description": "MaxSecurityGroups is the number of security groups available to a tenant.",
                    "type": "integer"
                },
                "maxServerGroupMembers": {
                    "description": "MaxServerGroupMembers is the number of server group members available\nto a tenant.",
                    "type": "integer"
                },
                "maxServerGroups": {
                    "description": "MaxServerGroups is the number of server groups available to a tenant.",
                    "type": "integer"
                },
                "maxServerMeta": {
                    "description": "MaxServerMeta is the amount of server metadata available to a tenant.",
                    "type": "integer"
                },
                "maxTotalCores": {
                    "description": "MaxTotalCores is the number of cores available to a tenant.",
                    "type": "integer"
                },
                "maxTotalFloatingIps": {
                    "description": "MaxTotalFloatingIps is the number of floating IPs available to a tenant.",
                    "type": "integer"
                },
                "maxTotalInstances": {
                    "description": "MaxTotalInstances is the number of instances/servers available to a tenant.",
                    "type": "integer"
                },
                "maxTotalKeypairs": {
                    "description": "MaxTotalKeypairs is the total keypairs available to a tenant.",
                    "type": "integer"
                },
                "maxTotalRAMSize": {
                    "description": "MaxTotalRAMSize is the total amount of RAM available to a tenant measured\nin megabytes (MB).",
                    "type": "integer"
                },
                "totalCoresUsed": {
                    "description": "TotalCoresUsed is the number of cores currently in use.",
                    "type": "integer"
                },
                "totalFloatingIpsUsed": {
                    "description": "TotalFloatingIpsUsed is the number of floating IPs in use.",
                    "type": "integer"
                },
                "totalInstancesUsed": {
                    "description": "TotalInstancesUsed is the number of instances/servers in use.",
                    "type": "integer"
                },
                "totalRAMUsed": {
                    "description": "TotalRAMUsed is the total RAM/memory in use measured in megabytes (MB).",
                    "type": "integer"
                },
                "totalSecurityGroupsUsed": {
                    "description": "TotalSecurityGroupsUsed is the total number of security groups in use.",
                    "type": "integer"
                },
                "totalServerGroupsUsed": {
                    "description": "TotalServerGroupsUsed is the total number of server groups in use.",
                    "type": "integer"
                }
            }
        },
        "limits.Limits": {
            "type": "object",
            "properties": {
                "absolute": {
                    "description": "Absolute contains the limits and usage information.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/limits.Absolute"
                        }
                    ]
                }
            }
        },
        "quotas.Quota": {
            "type": "object",
            "properties": {
                "floatingip": {
                    "description": "FloatingIP represents a number of floating IPs. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "network": {
                    "description": "Network represents a number of networks. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "port": {
                    "description": "Port represents a number of ports. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "rbac_policy": {
                    "description": "RBACPolicy represents a number of RBAC policies. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "router": {
                    "description": "Router represents a number of routers. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "security_group": {
                    "description": "SecurityGroup represents a number of security groups. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "security_group_rule": {
                    "description": "SecurityGroupRule represents a number of security group rules. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "subnet": {
                    "description": "Subnet represents a number of subnets. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "subnetpool": {
                    "description": "SubnetPool represents a number of subnet pools. A \"-1\" value means no limit.",
                    "type": "integer"
                },
                "trunk": {
                    "description": "Trunk represents a number of trunks. A \"-1\" value means no limit.",
                    "type": "integer"
                }
            }
        },
        "volumetypes.VolumeType": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Human-readable description for the volume type.",
                    "type": "string"
                },
                "extra_specs": {
                    "description": "Arbitrary key-value pairs defined by the user.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "Unique identifier for the volume type.",
                    "type": "string"
                },
                "is_public": {
                    "description": "Whether the volume type is publicly visible.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Human-readable display name for the volume type.",
                    "type": "string"
                },
                "os-volume-type-access:is_public": {
                    "description": "Volume Type access public attribute",
                    "type": "boolean"
                },
                "qos_specs_id": {
                    "description": "Qos Spec ID",
                    "type": "string"
                }
            }
        }
    }
}